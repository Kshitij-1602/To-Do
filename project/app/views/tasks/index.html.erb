<p style="color: green"><%= notice %></p>

<h1>Tasks</h1>

<div id="tasks">
  <% @tasks.each do |task| %>
    <%= render task %>
    <p>

    <%# <%= button_to "Edit Task",edit_user_task_path(task.id),method: :get %> %>
    <%# <%= button_to "Destroy this task", user_task_path, method: :delete %>
    <%# <%= button_to "Edit Task",[task.user,task]%> %>
    </p> 
    <%= button_to "See  tasks", [task.user, task], method: :get %>
    <%= link_to '<button type="button"> Delete Task </button>'.html_safe, [task.user, task], data: {
                turbo_method: :delete,
                turbo_confirm: "Are you sure?"
              } %>
  <% end %>
</div>

    <%# <%= link_to '<button type="button"> Add New Task </button>'.html_safe,  new_user_task_path %> %>
      <%= button_to "Add New Task", new_user_task_path, method: :get %>


it will render in index-rails knows
react components-hit create action in rails-json type-pass all the details-return type the result
then react renders the result.

all the tasks with user ID 1 and show the tasks. - do this in react
trigger the get requests from ruby and fetch ,display the results.
deploy stuff later-only rails server running,connecting with react without react server running.


